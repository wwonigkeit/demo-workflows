direktiv_api: workflow/v1

description: Run a Docker Hub Terraform container without any changes

functions:
  # This is a simple Terraform container from hub.docker.com
  - id: terraform
    image: hashicorp/terraform:latest
    type: knative-workflow
    size: medium
    cmd: /usr/share/direktiv/direktiv-cmd
 
states:
  # Let's only run a single state which executes the terraform commands
  - id: run-terraform 
    type: action
    action:
      secrets: ["AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY"]
      function: terraform
      files: 
      - key: /run-terraform-ansible-container/scripts/provision-aws-terraform.tf
        scope: file
        as: provision-aws.tf
      input:
        data:
          commands:
          - command: terraform init
          - command: terraform plan -var="aws_key=jq(.secrets.AWS_ACCESS_KEY_ID)" -var="aws_secret=jq(.secrets.AWS_SECRET_ACCESS_KEY)"
          - command: terraform apply -auto-approve -var="aws_key=jq(.secrets.AWS_ACCESS_KEY_ID)" -var="aws_secret=jq(.secrets.AWS_SECRET_ACCESS_KEY)"
          - command: cp terraform.tfstate out/workflow/terraform.tfstate
    transform: 'jq({ init: .return[0]."Output", plan: .return[1]."Output", apply: .return[2]."Output" })'
    transition: print-state

  - id: print-state
    type: getter
    variables:
    - key: terraform.tfstate
      scope: workflow
    transform: 'jq(. + { state: .var."terraform.tfstate" })'