direktiv_api: workflow/v1

description: Run a Docker Hub Ansible container without any changes

functions:
  # This is a simple Terraform container from hub.docker.com
  - id: ansible
    image: alpinelinux/ansible
    type: knative-workflow
    size: medium
    cmd: /usr/share/direktiv/direktiv-cmd
 
states:
  # Store in the incoming playbook as a variable to use in subsequent states
  - id: store-config
    type: setter
    variables:
    - key: provision-aws.yaml
      scope: workflow
      mimeType: text/plain
      value: 'jq( .body.data | @base64d )'
    transition: run-ansible

  # Let's only run a single state which executes the ansible commands
  - id: run-ansible 
    type: action
    action:
      secrets: ["AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY"]
      function: ansible
      files: 
      - key: provision-aws.yaml
        scope: workflow
        as: provision-aws.yaml
      input:
        files:
        - name: aws.credentials.sh
          mode: 0755
          data: |-
            export AWS_ACCESS_KEY_ID=jq(.secrets.AWS_ACCESS_KEY_ID)
            export AWS_SECRET_ACCESS_KEY=jq(.secrets.AWS_SECRET_ACCESS_KEY)
        data:
          commands:
          - command: ls -la
          - command: cat aws.credentials.sh
          - command: cat provision-aws.yaml
          # - command: source aws.credentials.env
          # - command: ansible-playbook provision-aws.yaml
  #   transform: 'jq( { version: .return[0].Output })'