direktiv_api: workflow/v1

description: Run kubectl command with a kubeconfig file stored as a variable

functions:
  # This is the DirektivApps kubectl container from apps.direktiv.io
  - id: kubectl
    image: gcr.io/direktiv/functions/kubectl:1.0
    type: knative-workflow
 
states:
  #
  # Let's only run a single state which executes the kubectl command.
  #
  - id: run-kubectl 
    type: action
    action:
      # secrets: ["KUBECONFIG"]                                                     # <--- Stored the config file from K3s as a secret
      function: kubectl
      files:                                                                      # <--- Create a file on the container
      #
      # This section can create the kubeconfig / config file based on a file in the GitHUb repository - created when you use the GitHub
      # sync capability
      #
      - key: /run-kubectl-workflows/data/kubectl.yaml                             # <--- Location of the file from the GitHUb repository
        scope: file                                                               # <--- Context of the variable (file in repository)
        as: kubeconfig-file                                                       # <--- Name of the file on the container file system
      #
      # OR ... you can use an internally stored variable for this purpose
      #
      - key: KUBECONFIG                                                           # <--- Name of the variable
        scope: namespace                                                          # <--- Context of the variable (file in repository)
        as: kubeconfig-variable                                                   # <--- Name of the file on the container file system
      #
      # Pull script from variable
      #
      - key: kubectl_script.sh                                                    # <--- Name of the variable
        scope: namespace                                                          # <--- Context of the variable (file in repository)
        as: kubectl_script_variable.sh                                            # <--- Name of the file on the container file system
      #
      # OR ...  you can pull script from GitHUb repository
      #
      - key: /run-kubectl-workflows/data/kubectl_script.sh                        # <--- Location of the file from the GitHUb repository
        scope: file                                                               # <--- Context of the variable (file in repository)
        as: kubectl_script_file.sh                                                # <--- Name of the file on the container file system
      input:
        # kubeconfig: jq(.secrets.KUBECONFIG | @base64)
        commands:
        - command: kubectl get nodes --kubeconfig=kubeconfig-file --output json
        - command: kubectl get pods --kubeconfig=kubeconfig-variable --output json
        - command: /bin/bash kubectl_script_variable.sh kubeconfig-file
        - command: /bin/bash kubectl_script_file.sh kubeconfig-variable
    # transform: 'jq( { result: .return[4]."Output" } )'