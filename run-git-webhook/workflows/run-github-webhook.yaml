direktiv_api: workflow/v1

description: Execute an orchestration policy based on the GitHub webhook

functions:
  # This is the official GitLab runner from hub.docker.com
  - id: github-runner
    image: ubuntu:latest
    type: knative-workflow
    size: large
    cmd: /usr/share/direktiv/direktiv-cmd

  # This is the Direktiv http-request container
  - id: http-request
    image: gcr.io/direktiv/functions/http-request:1.0
    type: knative-workflow
    size: small    
 
states:
  # Store in the incoming playbook as a variable to use in subsequent states
  - id: print-incoming
    type: noop
    log: jq(.)
    transition: create-token

  - id: create-token
    log: Get a token from GitHUb to use in the runner registration
    type: action
    action:
      function: http-request
      secrets: ["GITHUB_PAT"]
      input: 
        debug: False
        method: POST
        url: 'https://api.github.com/repos/jq(.body.repository.owner.name)/jq(.body.repository.name)/actions/runners/registration-token'
        headers:
          Accept: "application/vnd.github+json"
          Authorization: "Bearer jq(.secrets.GITHUB_PAT)"
          X-GitHub-Api-Version: "2022-11-28"
    #transform: 'jq( { access_token: .return[0].result.access_token } )'
    transition: start-runner

  - id: start-runner
    type: action
    action:
      function: github-runner
      input:
        data:
          commands:
          - command: apt update && apt upgrade
          - command: apt --yes install curl
          - command: mkdir actions-runner && cd actions-runner
          - command: curl -o actions-runner-linux-x64-2.312.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.312.0/actions-runner-linux-x64-2.312.0.tar.gz
          - command: tar xzf ./actions-runner-linux-x64-2.312.0.tar.gz
          - command: RUNNER_ALLOW_RUNASROOT="1" ./config.sh --url https://github.com/direktiv --token jq(.return[0].result.token)
          - command: RUNNER_ALLOW_RUNASROOT="1" ./run.sh
